---
- name: Install latest st2chatops package
  become: yes
  package:
    name: st2chatops
    state: latest
  when: st2chatops_version == "latest"
  tags: [st2chatops, skip_ansible_lint]

- name: Install pinned st2chatops package
  become: yes
  package:
    name: st2chatops={{ st2chatops_version }}
    state: present
  when: st2chatops_version != "latest"
  tags: [st2chatops, skip_ansible_lint]

- name: Add st2_api_key in st2chatops.env
  become: yes
  replace:
    dest: /opt/stackstorm/chatops/st2chatops.env
    regexp: '(?<=ST2_API_KEY=)(.*)$'
    replace: '{{ st2chatops_config.ST2_API_KEY }}'
  when: st2chatops_config.ST2_API_KEY != "CHANGE-ME-PLEASE"
  register: st2chatops_api_key
  tags: st2chatops

- name: Comment Username, Password and Auth URL, if API_KEY provided
  become: yes
  replace:
    dest: /opt/stackstorm/chatops/st2chatops.env
    regexp: '{{ item }}'
    replace: '# \1'
  with_items:
    - '^(export ST2_AUTH_URL.*)'
    - '^(export ST2_AUTH_USERNAME.*)'
    - '^(export ST2_AUTH_PASSWORD.*)'
  when: st2chatops_api_key.changed
  tags: [st2chatops, skip_ansible_lint]

- name: Uncomment Hubot Slack Adapter in st2chatops.env
  become: yes
  replace:
    dest: /opt/stackstorm/chatops/st2chatops.env
    regexp: '^# (export HUBOT_ADAPTER=slack)$'
    replace: '\1'
  when: st2chatops_api_key.changed and st2chatops_config.HUBOT_ADAPTER == "slack"
  register: uncomment_slack_adapter
  tags: [st2chatops, skip_ansible_lint]

- name: Uncomment and replace Hubot Slack Token in st2chatops.env
  become: yes
  replace:
    dest: /opt/stackstorm/chatops/st2chatops.env
    regexp: '^# (export HUBOT_SLACK_TOKEN.).*'
    replace: '\1{{ st2chatops_config.HUBOT_SLACK_TOKEN }}'
  when: uncomment_slack_adapter.changed and st2chatops_config.HUBOT_SLACK_TOKEN != "xoxb-CHANGE-ME-PLEASE"
  notify:
    - restart st2chatops
  tags: [st2chatops, skip_ansible_lint]

- name: Ensure st2chatops service is enabled and running
  become: yes
  service:
    name: st2chatops
    enabled: yes
  tags: st2chatops
